// Code generated by ent, DO NOT EDIT.

package ent

import (
	"time"

	"github.com/hieunlt/themis/ent/preset"
	"github.com/hieunlt/themis/ent/review"
	"github.com/hieunlt/themis/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	presetFields := schema.Preset{}.Fields()
	_ = presetFields
	// presetDescDisplay is the schema descriptor for display field.
	presetDescDisplay := presetFields[0].Descriptor()
	// preset.DisplayValidator is a validator for the "display" field. It is called by the builders before save.
	preset.DisplayValidator = presetDescDisplay.Validators[0].(func(string) error)
	// presetDescIsActive is the schema descriptor for is_active field.
	presetDescIsActive := presetFields[1].Descriptor()
	// preset.DefaultIsActive holds the default value on creation for the is_active field.
	preset.DefaultIsActive = presetDescIsActive.Default.(bool)
	// presetDescCreatedAt is the schema descriptor for created_at field.
	presetDescCreatedAt := presetFields[3].Descriptor()
	// preset.DefaultCreatedAt holds the default value on creation for the created_at field.
	preset.DefaultCreatedAt = presetDescCreatedAt.Default.(func() time.Time)
	// presetDescUpdatedAt is the schema descriptor for updated_at field.
	presetDescUpdatedAt := presetFields[4].Descriptor()
	// preset.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	preset.DefaultUpdatedAt = presetDescUpdatedAt.Default.(func() time.Time)
	// preset.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	preset.UpdateDefaultUpdatedAt = presetDescUpdatedAt.UpdateDefault.(func() time.Time)
	reviewFields := schema.Review{}.Fields()
	_ = reviewFields
	// reviewDescUserID is the schema descriptor for user_id field.
	reviewDescUserID := reviewFields[0].Descriptor()
	// review.UserIDValidator is a validator for the "user_id" field. It is called by the builders before save.
	review.UserIDValidator = reviewDescUserID.Validators[0].(func(string) error)
	// reviewDescTargetID is the schema descriptor for target_id field.
	reviewDescTargetID := reviewFields[1].Descriptor()
	// review.TargetIDValidator is a validator for the "target_id" field. It is called by the builders before save.
	review.TargetIDValidator = reviewDescTargetID.Validators[0].(func(string) error)
	// reviewDescRating is the schema descriptor for rating field.
	reviewDescRating := reviewFields[2].Descriptor()
	// review.RatingValidator is a validator for the "rating" field. It is called by the builders before save.
	review.RatingValidator = func() func(uint8) error {
		validators := reviewDescRating.Validators
		fns := [...]func(uint8) error{
			validators[0].(func(uint8) error),
			validators[1].(func(uint8) error),
		}
		return func(rating uint8) error {
			for _, fn := range fns {
				if err := fn(rating); err != nil {
					return err
				}
			}
			return nil
		}
	}()
	// reviewDescCreatedAt is the schema descriptor for created_at field.
	reviewDescCreatedAt := reviewFields[4].Descriptor()
	// review.DefaultCreatedAt holds the default value on creation for the created_at field.
	review.DefaultCreatedAt = reviewDescCreatedAt.Default.(func() time.Time)
	// reviewDescUpdatedAt is the schema descriptor for updated_at field.
	reviewDescUpdatedAt := reviewFields[5].Descriptor()
	// review.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	review.DefaultUpdatedAt = reviewDescUpdatedAt.Default.(func() time.Time)
	// review.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	review.UpdateDefaultUpdatedAt = reviewDescUpdatedAt.UpdateDefault.(func() time.Time)
}
